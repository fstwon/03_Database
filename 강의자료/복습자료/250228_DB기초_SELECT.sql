/*
* [Data] : 정량적이고 정성적 실제 값. 
	ex) 에베레스트 높이 : 8,848m / 직원 이름 : 홍길동 / 직원 연락처 : 010-1234-5678

* [정보] : 데이터에 "의미"를 부여한 것
	ex) 에베레스트는 세계에서 가장 높은 산이다.
	     홍길동 직원의 연락처는 010-1234-5678이다.

* [Database] : 데이터들을 모아둔 창고같은 공간이다.
	[정의]
	- [공용] 데이터 : 공동으로 사용되는 데이터
	- 통합 데이터 : 중복을 최소화하여 데이터 불일치 현상 제거
	- 저장 데이터 : 저장장치에 저장된 데이터
	- [운영] 데이터 : 조직의 목적을 위해 사용되는 데이터
    
	[특징]
	- 실시간 접근성 
	- 계속적인 변화
	- [동시 공유]
	- 내용에 의한 참조

* [DBMS] : 데이터베이스 관리 시스템
  - 데이터 추출, 조작, 정의, 제어
  - [Table] : 데이터를 그룹화한 것
  - Oracle => 관계형 데이터베이스 (RDBMS)
	      -> 데이터 간의 관계를 두고 관리하는 방식

======================================================
[DQL, SELECT] - 데이터 조회

* 기본적인 사용법 : SELECT [column 또는 산술 연산식 또는 *] FROM [table]

* 별칭을 사용한 방법
	[1] column 별칭
	[2] column "별칭"
	[3] column AS 별칭
	[4] column AS "별칭"

* 여러 개의 컬럼을 하나의 데이터로 조회하고 싶을 때 ? || 연결 연산자
SELECT column || ' : ' || column FROM table;

* 한 컬럼의 데이터를 중복을 제거한 상태로 조회할 때 ? DISTINCT 
SELECT DISTINCT 중복제거타겟데이터 FROM table;

* 조건에 따라 데이터를 조회하고자 할 때 ? WHERE
SELECT column FROM table WHERE JOB_CODE = 'J5';
	
	- 조건식 위치에 올 수 있는 것들
	[1] 대소 비교 연산자 : <, >, <=, >=
	[2] 동등 비교 연산자 : <>, !=, =, ^=
	[3] 논리 연산자 : AND, OR, NOT
*/

-- 직급 정보 중 'J5' 코드의 직급명 조회
SELECT JOB_NAME AS "직급명" FROM JOB WHERE JOB_CODE = 'J5';

-- 부서 정보 중 'D2' 코드의 부서명 조회
SELECT DEPT_TITLE AS "부서명" FROM DEPARTMENT WHERE DEPT_ID = 'D2';

-- 부서 코드가 'D5' 인 사원 정보 조회
SELECT * FROM EMPLOYEE WHERE DEPT_CODE = 'D5';

-- 부서 코드가 'D8'인 사원의 정보를 아래와 같이 조회 
--   {사번} : {사원명}
SELECT EMP_ID || ' : ' || EMP_NAME AS "사원 정보" FROM EMPLOYEE WHERE DEPT_CODE = 'D8';

-- 사원 정보 중 사번이 210 ~ 219 인 사원 정보 조회
-- SELECT * FROM EMPLOYEE WHERE EMP_ID >= 210 AND EMP_ID <= 219;
SELECT * FROM EMPLOYEE WHERE EMP_ID BETWEEN 210 AND 219;






















