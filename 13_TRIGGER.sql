/*
    * TRIGGER
*/
-- EMPLOYEE 테이블에 데이터가 추가될 시 '신입사원님 환영합니다.' 출력
CREATE TRIGGER TRG_EMP AFTER INSERT ON EMPLOYEE
BEGIN
    DBMS_OUTPUT.PUT_LINE('신입사원님 환영합니다.');
END;
/

INSERT INTO EMPLOYEE (EMP_ID, EMP_NAME, EMP_NO, JOB_CODE, HIRE_DATE)
    VALUES (SEQ_EID.NEXTVAL, '박영철', '000000-1000000', 'J6', SYSDATE);
--------------------------------------------------------------------------------
-- * 상품 입고, 출고 관련
-- TB_PRODUCT 테이블 생성
CREATE TABLE TB_PRODUCT (
    PNO NUMBER PRIMARY KEY, 
    PNAME VARCHAR2(30) NOT NULL,
    BRAND VARCHAR2(30) NOT NULL,
    PRICE NUMBER DEFAULT 0,
    STOCK NUMBER DEFAULT 0
);

-- SEQ_PNO 시퀀스 생성, 시작 값 200, 증가 값 5 노캐시
CREATE SEQUENCE SEQ_PNO START WITH 200 INCREMENT BY 5 NOCACHE;

-- 샘플 데이터 추가
INSERT INTO TB_PRODUCT (PNO, PNAME, BRAND) VALUES (SEQ_PNO.NEXTVAL, '아이폰16', '사과');
INSERT INTO TB_PRODUCT VALUES (SEQ_PNO.NEXTVAL, '갤럭시 25', '삼송', 1500000, 50);
INSERT INTO TB_PRODUCT VALUES (SEQ_PNO.NEXTVAL, '샤오미폰', '샤오미', 900000, 200);

SELECT * FROM TB_PRODUCT;

COMMIT;

-- TB_PDETAIL 테이블 생성, 상품 입출고 내역 저장 테이블
CREATE TABLE TB_PDETAIL (
    DNO NUMBER PRIMARY KEY,
    PNO NUMBER REFERENCES TB_PRODUCT,
    DTATE DATE DEFAULT SYSDATE,
    AMOUNT NUMBER NOT NULL,
    DTYPE CHAR(10) CHECK(DTYPE IN ('입고', '출고'))
);

-- * SEQ_DNO 시퀀스 생성, NOCACHE
CREATE SEQUENCE SEQ_DNO NOCACHE;

-- 205번 상품, 5개 출고 
-- TB_PDETAIL 테이블 데이터 추가
INSERT INTO TB_PDETAIL VALUES (SEQ_DNO.NEXTVAL, 205, DEFAULT, 5, '출고');

-- TB_PRODUCT 테이블 데이터 변경(갱신)
UPDATE TB_PRODUCT SET STOCK = STOCK - 5 WHERE PNO = 205;

SELECT * FROM TB_PDETAIL;
SELECT * FROM TB_PRODUCT;

COMMIT;

-- * 200번 상품 10개 입고
-- TB_PDETAIL 데이터 추가
INSERT INTO TB_PDETAIL VALUES(SEQ_DNO.NEXTVAL, 200, DEFAULT, 10, '입고');
-- TB_PRODUCT 데이터 갱신
UPDATE TB_PRODUCT SET STOCK = STOCK + 10 WHERE PNO = 200;

SELECT * FROM TB_PDETAIL;
SELECT * FROM TB_PRODUCT;

ROLLBACK;

/*
    TB_PDETAIL 테이블에 데이터 추가 시 TB_PRODUCT 테이블 데이터 갱신
    
    UPDATE 조건
    상품 입고 시 해당 상품 재고 수량 증가
    UPDATE TB_PRODUCT SET STOCK = STOCK + 입고수량(TB_PDETAIL.AMOUNT) -> :NEW.AMOUNT
    WHERE PNO = 입고된 상품 번호(TB_PDETAIL.PNO) :NEW.PNO
    
    상품 출고 시 해당 상품 재고 수량 감소 
    UPDATE TB_PRODUCT SET STOCK = STOCK - 입고수량(TB_PDETAIL.AMOUNT) -> :NEW.AMOUNT
    WHERE PNO = 입고된 상품 번호(TB_PDETAIL.PNO) :NEW.PNO
*/
CREATE OR REPLACE TRIGGER TRG_02 AFTER INSERT ON TB_PDETAIL FOR EACH ROW
BEGIN
    IF :NEW.DTYPE = '입고'
        THEN UPDATE TB_PRODUCT SET STOCK = STOCK + :NEW.AMOUNT WHERE PNO = :NEW.PNO;
    ELSE UPDATE TB_PRODUCT SET STOCK = STOCK - :NEW.AMOUNT WHERE PNO = :NEW.PNO;
    END IF;
--    CASE :NEW.DTYPE
--        WHEN '입고' 
--            THEN UPDATE TB_PRODUCT SET STOCK = STOCK + :NEW.AMOUNT WHERE PNO = :NEW.PNO;
--        ELSE UPDATE TB_PRODUCT SET STOCK = STOCK - :NEW.AMOUNT WHERE PNO = :NEW.PNO;
--    END CASE;
END;
/

SELECT * FROM TB_PRODUCT;

INSERT INTO TB_PDETAIL VALUES(SEQ_DNO.NEXTVAL, 210, DEFAULT, 10, '입고'); 
INSERT INTO TB_PDETAIL VALUES(SEQ_DNO.NEXTVAL, 210, DEFAULT, 10, '출고'); 







